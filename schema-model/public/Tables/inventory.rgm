table "public"."inventory" {
  columns = (
    column "inventory_id" {
      type = integer
      null = NOT NULL
      default = nextval('public.inventory_inventory_id_seq'::regclass)
    }
    column "film_id" {
      type = integer
      null = NOT NULL
    }
    column "store_id" {
      type = integer
      null = NOT NULL
    }
    column "last_update" {
      type = timestamp with time zone
      null = NOT NULL
      default = now()
    }
  )
  primaryKeys = (
    primaryKey "inventory_pkey" {
      columns = [
        "inventory_id"
      ]
    }
  )
}

foreignKey "public"."inventory"."inventory_film_id_fkey" {
  columns = [
    "film_id"
  ]
  referencedTable = "public"."film"
  referencedColumns = [
    "film_id"
  ]
  onUpdate = CASCADE
  onDelete = RESTRICT
}

foreignKey "public"."inventory"."inventory_store_id_fkey" {
  columns = [
    "store_id"
  ]
  referencedTable = "public"."store"
  referencedColumns = [
    "store_id"
  ]
  onUpdate = CASCADE
  onDelete = RESTRICT
}

index "public"."idx_store_id_film_id" {
  table = "public"."inventory"
  type = btree
  columns = [
    "film_id"
    "store_id"
  ]
  isUnique = False
}

trigger "public"."inventory"."last_updated" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = public.last_updated
  functionArguments = [
  ]
  constraint = False
}

