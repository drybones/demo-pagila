table "public"."store" {
  columns = (
    column "store_id" {
      type = integer
      null = NOT NULL
      default = nextval('public.store_store_id_seq'::regclass)
    }
    column "manager_staff_id" {
      type = integer
      null = NOT NULL
    }
    column "address_id" {
      type = integer
      null = NOT NULL
    }
    column "last_update" {
      type = timestamp with time zone
      null = NOT NULL
      default = now()
    }
  )
  primaryKeys = (
    primaryKey "store_pkey" {
      columns = [
        "store_id"
      ]
    }
  )
}

foreignKey "public"."store"."store_address_id_fkey" {
  columns = [
    "address_id"
  ]
  referencedTable = "public"."address"
  referencedColumns = [
    "address_id"
  ]
  onUpdate = CASCADE
  onDelete = RESTRICT
}

index "public"."idx_unq_manager_staff_id" {
  table = "public"."store"
  type = btree
  columns = [
    "manager_staff_id"
  ]
  isUnique = True
}

trigger "public"."store"."last_updated" {
  timing = BEFORE
  events = [
    UPDATE
  ]
  level = ROW
  function = public.last_updated
  functionArguments = [
  ]
  constraint = False
}

